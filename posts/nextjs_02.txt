3:I[5613,[],""]
5:I[1778,[],""]
6:I[5250,["250","static/chunks/250-f635c526f5148b81.js","432","static/chunks/app/(blog)/layout-4dbe9f485cf84522.js"],""]
4:["slug","nextjs_02","d"]
7:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
8:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
9:{"display":"inline-block"}
a:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["7YetJbdZj7q2I4ySWTZ7A",[[["",{"children":["(blog)",{"children":["posts",{"children":[["slug","nextjs_02","d"],{"children":["__PAGE__?{\"slug\":\"nextjs_02\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(blog)",{"children":["posts",{"children":[["slug","nextjs_02","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children","posts","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/test/_next/static/css/fb457670bfaeafb0.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children","posts","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","div",null,{"className":"min-h-screen","children":[["$","header",null,{"className":"top-0 w-full py-6","children":["$","div",null,{"className":"items-center p-4 justify-between flex","children":[["$","div",null,{"className":"outer-title flex items-center","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"crow","className":"svg-inline--fa fa-crow px-4 h-7 text-slate-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 640 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M456 0c-48.6 0-88 39.4-88 88v29.2L12.5 390.6c-14 10.8-16.6 30.9-5.9 44.9s30.9 16.6 44.9 5.9L126.1 384H259.2l46.6 113.1c5 12.3 19.1 18.1 31.3 13.1s18.1-19.1 13.1-31.3L311.1 384H352c1.1 0 2.1 0 3.2 0l46.6 113.2c5 12.3 19.1 18.1 31.3 13.1s18.1-19.1 13.1-31.3l-42-102C484.9 354.1 544 280 544 192V128v-8l80.5-20.1c8.6-2.1 13.8-10.8 11.6-19.4C629 52 603.4 32 574 32H523.9C507.7 12.5 483.3 0 456 0zm0 64a24 24 0 1 1 0 48 24 24 0 1 1 0-48z","style":{}}]}],["$","$L6",null,{"href":"/","className":"hover:underline text-4xl font-bold","children":"さんまや"}]]}],["$","input",null,{"id":"nav-input","type":"checkbox","className":"peer/link hidden"}],["$","nav",null,{"className":"hidden fixed text-lg font-bold right-0 top-20 p-3 peer-checked/link:block z-20","children":["$","ul",null,{"className":"block text-slate-200 bg-[#333]","children":[["$","li",null,{"className":"p-2 hover:underline","children":["$","a",null,{"href":"/","children":"さんまや"}]}],["$","li",null,{"className":"p-2 hover:underline","children":["$","a",null,{"href":"/vbscript","children":"VBScriptさんま屋"}]}]]}]}],["$","label",null,{"htmlFor":"nav-input","className":"block peer-checked/link:hidden","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"bars","className":"svg-inline--fa fa-bars h-10 w-10","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z","style":{}}]}]}],["$","label",null,{"htmlFor":"nav-input","className":"hidden peer-checked/link:block fixed right-4 z-30","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"xmark","className":"svg-inline--fa fa-xmark h-10 w-10","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 384 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z","style":{}}]}]}]]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","footer",null,{"className":"bg-bluelo text-white border-t border-neutral-200","children":["$","div",null,{"className":"container mx-auto py-5 px-5","children":["$","div",null,{"className":"py-28 flex flex-col lg:flex-row items-center","children":[["$","h3",null,{"className":"text-4xl lg:text-[2.5rem] font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2","children":"Statically Generated with Next.js."}],["$","div",null,{"className":"flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2","children":[["$","a",null,{"href":"https://nextjs.org/docs/app/building-your-application/routing/pages-and-layouts","className":"mx-3 bg-black hover:bg-white hover:text-black border border-black text-white font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0","children":"Read Documentation"}],["$","a",null,{"href":"https://github.com/vercel/next.js/tree/canary/examples/blog-starter","className":"mx-3 font-bold hover:underline","children":"View on GitHub"}]]}]]}]}]}]]}],null]]},[null,["$","html",null,{"lang":"ja","children":[["$","head",null,{"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/favicon/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/favicon/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/favicon/safari-pinned-tab.svg","color":"#000000"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon/favicon.ico"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"msapplication-config","content":"/favicon/browserconfig.xml"}],["$","meta",null,{"name":"theme-color","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"__className_4b2d43","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$7","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$8","children":"404"}],["$","div",null,{"style":"$9","children":["$","h2",null,{"style":"$a","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/test/_next/static/css/1e48c8eb9467e29d.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
c:Tb93e,<nav class="toc"><ol class="toc-level toc-level-1"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#はじめに">はじめに</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#シンタックスハイライトを使えるようにする">シンタックスハイライトを使えるようにする</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#マークダウンにhtmlタグを埋め込めるようにする">マークダウンにHTMLタグを埋め込めるようにする</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#github風のマークダウン記法を使えるようにする">GitHub風のマークダウン記法を使えるようにする</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#目次を表示させる">目次を表示させる</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#デフォルト以外の言語をシンタックスハイライトする">デフォルト以外の言語をシンタックスハイライトする</a></li></ol></nav><h2 id="はじめに">はじめに</h2>
<p>Next.jsの<code>Blog Starter Kit</code>を使ったサイト作成の続編です。<br>
<a href="https://github.com/rehypejs/rehype-highlight">rehype-highlight</a>を使ってシンタックスハイライトを実現します。<br>
テーマごとの見た目は<a href="https://highlightjs.org/demo">https://highlightjs.org/demo</a>で確認できます。<br>
他にマークダウンや目次を設定します。</p>
<h2 id="シンタックスハイライトを使えるようにする">シンタックスハイライトを使えるようにする</h2>
<p>ターミナルを立ち上げてプロジェクトのトップへ移動します。</p>
<pre><code class="hljs language-text">> cd C:\website\blog-starter-app
</code></pre>
<p>必要なパッケージをインストールします。</p>
<pre><code class="hljs language-shell"><span class="hljs-meta prompt_">> </span><span class="bash">npm i unified</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i remark-parse</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i remark-rehype</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i rehype-highlight</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i rehype-stringify</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i highlight.js</span>
</code></pre>
<p>「src\lib\markdownToHtml.ts」をエディタで開くと以下のようになってます。<br>
なお比較のため改行を追加してます。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { remark } <span class="hljs-keyword">from</span> <span class="hljs-string">"remark"</span>;
<span class="hljs-keyword">import</span> html <span class="hljs-keyword">from</span> <span class="hljs-string">"remark-html"</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">remark</span>()
    .<span class="hljs-title function_">use</span>(html)
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<p>上のコードではマークダウン->HTMLを以下のように役割分担しています。</p>
<ul>
<li><strong>remark</strong>: マークダウン -> マークダウンの木構造</li>
<li><strong>remark-html</strong>: マークダウンの木構造 -> HTMLの木構造 -> HTML</li>
</ul>
<p>これを以下のように変更するとシンタックスハイライトを実現できます。</p>
<ul>
<li><strong>remark</strong>: マークダウン -> マークダウンの木構造</li>
<li><strong>remark-rehype</strong>: マークダウンの木構造 -> HTMLの木構造</li>
<li><strong>rehype-highlight</strong>: HTMLの木構造 -> HTMLの木構造</li>
<li><strong>rehype-stringify</strong>: HTMLの木構造 -> HTML</li>
</ul>
<p>さらに今後の変更に備え、remarkを <code>unified</code> と <code>remark-parse</code> で置き換えます。</p>
<ul>
<li><strong>remark-parse</strong>: マークダウン -> マークダウンの木構造</li>
<li><strong>remark-rehype</strong>: マークダウンの木構造 -> HTMLの木構造</li>
<li><strong>rehype-highlight</strong>: HTMLの木構造 -> HTMLの木構造</li>
<li><strong>rehype-stringify</strong>: HTMLの木構造 -> HTML</li>
</ul>
<p>以上を参考に「src\lib\markdownToHtml.ts」を以下のように変更します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { unified } <span class="hljs-keyword">from</span> <span class="hljs-string">'unified'</span>;
<span class="hljs-keyword">import</span> remarkParse <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-parse'</span>;
<span class="hljs-keyword">import</span> remarkRehype <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-rehype'</span>;
<span class="hljs-keyword">import</span> rehypeHighlight <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-highlight'</span>;
<span class="hljs-keyword">import</span> rehypeStringify <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-stringify'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">unified</span>()
    .<span class="hljs-title function_">use</span>(remarkParse)
    .<span class="hljs-title function_">use</span>(remarkRehype)
    .<span class="hljs-title function_">use</span>(rehypeHighlight)
    .<span class="hljs-title function_">use</span>(rehypeStringify)
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<p>好みのテーマをインポートします。ここでは<code>a11y-dark</code>を使います。「src/app/layout.tsx」 内に以下の行を追加します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> <span class="hljs-string">"highlight.js/styles/a11y-dark.css"</span>;
</code></pre>
<p>以上でシンタックスハイライトが使えるようになってます。</p>
<p>記事のmdファイルで</p>
<pre><code class="hljs language-js">```js
console.log("Hello");
```</code></pre>
<p>のように記載すると、生成されるHTMLは以下のように表示されます。</p>
<pre><code class="hljs language-js"><span class="hljs-variable language_">console</span>.<span class="hljs-title function_">log</span>(<span class="hljs-string">"Hello"</span>);
</code></pre>
<h2 id="マークダウンにhtmlタグを埋め込めるようにする">マークダウンにHTMLタグを埋め込めるようにする</h2>
<p>mdファイルにHTMLタグを記載しても</p>
<pre><code class="hljs language-md">&#x3C;p>HTML&#x3C;/p>
Markdown
</code></pre>
<p>変換の過程でその内容は消えてしまいます。</p>
<pre><code class="hljs language-text">Markdown
</code></pre>
<p>HTMLタグを反映させるには<a href="https://github.com/remarkjs/remark-rehype">remark-rehype</a>と<a href="https://github.com/rehypejs/rehype/tree/main/packages/rehype-stringify">rehype-stringify</a>に<code>allowDangerousHtml</code>オプションを設定します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { unified } <span class="hljs-keyword">from</span> <span class="hljs-string">'unified'</span>;
<span class="hljs-keyword">import</span> remarkParse <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-parse'</span>;
<span class="hljs-keyword">import</span> remarkRehype <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-rehype'</span>;
<span class="hljs-keyword">import</span> rehypeHighlight <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-highlight'</span>;
<span class="hljs-keyword">import</span> rehypeStringify <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-stringify'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">unified</span>()
    .<span class="hljs-title function_">use</span>(remarkParse)
    .<span class="hljs-title function_">use</span>(remarkRehype, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">use</span>(rehypeHighlight)
    .<span class="hljs-title function_">use</span>(rehypeStringify, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<h3 id="参考">参考:</h3>
<p><a href="https://zenn.dev/yodaka/articles/cee5943b92dfed">https://zenn.dev/yodaka/articles/cee5943b92dfed</a></p>
<h2 id="github風のマークダウン記法を使えるようにする">GitHub風のマークダウン記法を使えるようにする</h2>
<p><code>Blog Starter Kit</code>で最初から使えるマークダウンは機能が弱いので、<a href="https://github.com/remarkjs/remark-gfm">remark-gfm</a>を導入します。あと<code>&#x3C;br></code>改行が簡単に使えるように<a href="https://github.com/remarkjs/remark-breaks">remark-breaks</a>も導入します。</p>
<p>プロジェクトのトップへ移動して、インストールを実行します。</p>
<pre><code class="hljs language-shell"><span class="hljs-meta prompt_">> </span><span class="bash">npm i remark-gfm</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i remark-breaks</span>
</code></pre>
<p>「src\lib\markdownToHtml.ts」を以下のように変更します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { unified } <span class="hljs-keyword">from</span> <span class="hljs-string">'unified'</span>;
<span class="hljs-keyword">import</span> remarkParse <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-parse'</span>;
<span class="hljs-keyword">import</span> remarkGfm <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-gfm'</span>;
<span class="hljs-keyword">import</span> remarkBreaks <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-breaks'</span>;
<span class="hljs-keyword">import</span> remarkRehype <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-rehype'</span>;
<span class="hljs-keyword">import</span> rehypeHighlight <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-highlight'</span>;
<span class="hljs-keyword">import</span> rehypeStringify <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-stringify'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">unified</span>()
    .<span class="hljs-title function_">use</span>(remarkParse)
    .<span class="hljs-title function_">use</span>(remarkGfm)
    .<span class="hljs-title function_">use</span>(remarkBreaks)
    .<span class="hljs-title function_">use</span>(remarkRehype, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">use</span>(rehypeHighlight)
    .<span class="hljs-title function_">use</span>(rehypeStringify, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<h2 id="目次を表示させる">目次を表示させる</h2>
<p>プロジェクトのトップへ移動して、インストールを実行します。</p>
<pre><code class="hljs language-shell"><span class="hljs-meta prompt_">> </span><span class="bash">npm i rehype-toc</span>
<span class="hljs-meta prompt_">> </span><span class="bash">npm i rehype-slug</span>
</code></pre>
<p><a href="https://github.com/Microflash/rehype-toc">rehype-toc</a>だけでも目次は作成できますが、リンクが働きません。<br>
<a href="https://github.com/rehypejs/rehype-slug">rehype-slug</a>は見出しにIDを振って、リンクを有効にしてくれます。</p>
<p>「src\lib\markdownToHtml.ts」を以下のように変更します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { unified } <span class="hljs-keyword">from</span> <span class="hljs-string">'unified'</span>;
<span class="hljs-keyword">import</span> remarkParse <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-parse'</span>;
<span class="hljs-keyword">import</span> remarkGfm <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-gfm'</span>;
<span class="hljs-keyword">import</span> remarkBreaks <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-breaks'</span>;
<span class="hljs-keyword">import</span> remarkRehype <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-rehype'</span>;
<span class="hljs-keyword">import</span> rehypeSlug <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-slug'</span>;
<span class="hljs-keyword">import</span> rehypeToc <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-toc'</span>;
<span class="hljs-keyword">import</span> rehypeHighlight <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-highlight'</span>;
<span class="hljs-keyword">import</span> rehypeStringify <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-stringify'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">unified</span>()
    .<span class="hljs-title function_">use</span>(remarkParse)
    .<span class="hljs-title function_">use</span>(remarkGfm)
    .<span class="hljs-title function_">use</span>(remarkBreaks)
    .<span class="hljs-title function_">use</span>(remarkRehype, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">use</span>(rehypeSlug)
    .<span class="hljs-title function_">use</span>(rehypeToc, { <span class="hljs-attr">headings</span>: [<span class="hljs-string">"h2"</span>],})
    .<span class="hljs-title function_">use</span>(rehypeHighlight)
    .<span class="hljs-title function_">use</span>(rehypeStringify, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<p><code>&#x3C;h2></code>タグで囲まれた見出しを拾って、記事の先頭に目次が作成されます。</p>
<h2 id="デフォルト以外の言語をシンタックスハイライトする">デフォルト以外の言語をシンタックスハイライトする</h2>
<p>デフォルトでシンタックスハイライトできるのは、以下の表の「初期」欄に丸がついている言語になります。</p>
<table>
<thead>
<tr>
<th align="left">言語</th>
<th align="left">エイリアス</th>
<th align="left">初期</th>
</tr>
</thead>
<tbody>
<tr>
<td align="left">1C</td>
<td align="left">1c</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">4D</td>
<td align="left">4d</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ABAP</td>
<td align="left">sap-abap, abap</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ABNF</td>
<td align="left">abnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Access logs</td>
<td align="left">accesslog</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ActionScript</td>
<td align="left">actionscript, as</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ada</td>
<td align="left">ada</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Alan</td>
<td align="left">ln</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Alan IF</td>
<td align="left">alan, i</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AngelScript</td>
<td align="left">angelscript, asc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Apache</td>
<td align="left">apache, apacheconf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Apex</td>
<td align="left">apex</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AppleScript</td>
<td align="left">applescript, osascript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Arcade</td>
<td align="left">arcade</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Arduino (C++ w/Arduino libs)</td>
<td align="left">arduino, ino</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ARM assembler</td>
<td align="left">armasm, arm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AsciiDoc</td>
<td align="left">asciidoc, adoc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AspectJ</td>
<td align="left">aspectj</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AutoHotkey</td>
<td align="left">autohotkey</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AutoIt</td>
<td align="left">autoit</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">AVR assembler</td>
<td align="left">avrasm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Awk</td>
<td align="left">awk, mawk, nawk, gawk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ballerina</td>
<td align="left">ballerina, bal</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Bash</td>
<td align="left">bash, sh, zsh</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Basic</td>
<td align="left">basic</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">BBCode</td>
<td align="left">bbcode</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Blade (Laravel)</td>
<td align="left">blade</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">BNF</td>
<td align="left">bnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">BQN</td>
<td align="left">bqn</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Brainfuck</td>
<td align="left">brainfuck, bf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C</td>
<td align="left">c, h</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">C#</td>
<td align="left">csharp, cs</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">C/AL</td>
<td align="left">cal</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">C++</td>
<td align="left">cpp, hpp, cc, hh, c++, h++, cxx, hxx</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">C3</td>
<td align="left">c3</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cache Object Script</td>
<td align="left">cos, cls</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Candid</td>
<td align="left">candid, did</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cap’n Proto</td>
<td align="left">capnproto, capnp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Chaos</td>
<td align="left">chaos, kaos</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Chapel</td>
<td align="left">chapel, chpl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cisco CLI</td>
<td align="left">cisco</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Clojure</td>
<td align="left">clojure, clj</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CMake</td>
<td align="left">cmake, cmake.in</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">COBOL</td>
<td align="left">cobol, standard-cobol</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CODEOWNERS</td>
<td align="left">codeowners</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CoffeeScript</td>
<td align="left">coffeescript, coffee, cson, iced</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Coq</td>
<td align="left">coq</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CpcdosC+</td>
<td align="left">cpc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Crmsh</td>
<td align="left">crmsh, crm, pcmk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Crystal</td>
<td align="left">crystal, cr</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CSP</td>
<td align="left">csp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">CSS</td>
<td align="left">css</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">cURL</td>
<td align="left">curl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Cypher (Neo4j)</td>
<td align="left">cypher</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">D</td>
<td align="left">d</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dafny</td>
<td align="left">dafny</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dart</td>
<td align="left">dart</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Delphi</td>
<td align="left">dpr, dfm, pas, pascal</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Diff</td>
<td align="left">diff, patch</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Django</td>
<td align="left">django, jinja</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DNS Zone file</td>
<td align="left">dns, zone, bind</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dockerfile</td>
<td align="left">dockerfile, docker</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DOS</td>
<td align="left">dos, bat, cmd</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">dsconfig</td>
<td align="left">dsconfig</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">DTS (Device Tree)</td>
<td align="left">dts</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dust</td>
<td align="left">dust, dst</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Dylan</td>
<td align="left">dylan</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">EBNF</td>
<td align="left">ebnf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Elixir</td>
<td align="left">elixir</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Elm</td>
<td align="left">elm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Erlang</td>
<td align="left">erlang, erl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Excel</td>
<td align="left">excel, xls, xlsx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Extempore</td>
<td align="left">extempore, xtlang, xtm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">F#</td>
<td align="left">fsharp, fs, fsx, fsi, fsscript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">FIX</td>
<td align="left">fix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Flix</td>
<td align="left">flix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Fortran</td>
<td align="left">fortran, f90, f95</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">FunC</td>
<td align="left">func</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Gams</td>
<td align="left">gams, gms</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GAUSS</td>
<td align="left">gauss, gss</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">G-Code</td>
<td align="left">gcode, nc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GDScript</td>
<td align="left">godot, gdscript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Gherkin</td>
<td align="left">gherkin</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Glimmer and EmberJS</td>
<td align="left">hbs, glimmer, html.hbs, html.handlebars, htmlbars</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GN for Ninja</td>
<td align="left">gn, gni</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Go</td>
<td align="left">go, golang</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Golo</td>
<td align="left">golo, gololang</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Gradle</td>
<td align="left">gradle</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Grammatical Framework</td>
<td align="left">gf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GraphQL</td>
<td align="left">graphql, gql</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Groovy</td>
<td align="left">groovy</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">GSQL</td>
<td align="left">gsql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haml</td>
<td align="left">haml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Handlebars</td>
<td align="left">handlebars, hbs, html.hbs, html.handlebars</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haskell</td>
<td align="left">haskell, hs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Haxe</td>
<td align="left">haxe, hx</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">High-level shader language</td>
<td align="left">hlsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">HTML, XML</td>
<td align="left">xml, html, xhtml, rss, atom, xjb, xsd, xsl, plist, svg</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">HTTP</td>
<td align="left">http, https</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Hy</td>
<td align="left">hy, hylang</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Inform7</td>
<td align="left">inform7, i7</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ini, TOML</td>
<td align="left">ini, toml</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Iptables</td>
<td align="left">iptables</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">IRPF90</td>
<td align="left">irpf90</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Java</td>
<td align="left">java, jsp</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">JavaScript</td>
<td align="left">javascript, js, jsx</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Jolie</td>
<td align="left">jolie, iol, ol</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">JSON</td>
<td align="left">json, jsonc</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">JSONata</td>
<td align="left">jsonata</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Julia</td>
<td align="left">julia, jl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Julia REPL</td>
<td align="left">julia-repl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Kotlin</td>
<td align="left">kotlin, kt</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Lang</td>
<td align="left"></td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lasso</td>
<td align="left">lasso, ls, lassoscript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LaTeX</td>
<td align="left">tex</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LDIF</td>
<td align="left">ldif</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Leaf</td>
<td align="left">leaf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lean</td>
<td align="left">lean</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Less</td>
<td align="left">less</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Lisp</td>
<td align="left">lisp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LiveCode Server</td>
<td align="left">livecodeserver</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LiveScript</td>
<td align="left">livescript, ls</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">LookML</td>
<td align="left">lookml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Lua</td>
<td align="left">lua</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Luau</td>
<td align="left">luau</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Macaulay2</td>
<td align="left">macaulay2</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Makefile</td>
<td align="left">makefile, mk, mak, make</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Markdown</td>
<td align="left">markdown, md, mkdown, mkd</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Mathematica</td>
<td align="left">mathematica, mma, wl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Matlab</td>
<td align="left">matlab</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Maxima</td>
<td align="left">maxima</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Maya Embedded Language</td>
<td align="left">mel</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mercury</td>
<td align="left">mercury</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mint</td>
<td align="left">mint</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MIPS Assembler</td>
<td align="left">mips, mipsasm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">mIRC Scripting Language</td>
<td align="left">mirc, mrc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mirth</td>
<td align="left">mirth</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mizar</td>
<td align="left">mizar</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MKB</td>
<td align="left">mkb</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">MLIR</td>
<td align="left">mlir</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Mojolicious</td>
<td align="left">mojolicious</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Monkey</td>
<td align="left">monkey</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Moonscript</td>
<td align="left">moonscript, moon</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Motoko</td>
<td align="left">motoko, mo</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">N1QL</td>
<td align="left">n1ql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Never</td>
<td align="left">never</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Nginx</td>
<td align="left">nginx, nginxconf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Nim</td>
<td align="left">nim, nimrod</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Nix</td>
<td align="left">nix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">NSIS</td>
<td align="left">nsis</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Oak</td>
<td align="left">oak</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Object Constraint Language</td>
<td align="left">ocl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Objective C</td>
<td align="left">objectivec, mm, objc, obj-c, obj-c++, objective-c++</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">OCaml</td>
<td align="left">ocaml, ml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">OpenGL Shading Language</td>
<td align="left">glsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">OpenSCAD</td>
<td align="left">openscad, scad</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Oracle Rules Language</td>
<td align="left">ruleslanguage</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Oxygene</td>
<td align="left">oxygene</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Papyrus</td>
<td align="left">papyrus, psc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Parser3</td>
<td align="left">parser3</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Perl</td>
<td align="left">perl, pl, pm</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">PF</td>
<td align="left">pf, pf.conf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Phix</td>
<td align="left">phix</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PHP</td>
<td align="left">php</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Pine Script</td>
<td align="left">pine, pinescript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Plaintext</td>
<td align="left">plaintext, txt, text</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Pony</td>
<td align="left">pony</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PostgreSQL &#x26; PL/pgSQL</td>
<td align="left">pgsql, postgres, postgresql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">PowerShell</td>
<td align="left">powershell, ps, ps1</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Processing</td>
<td align="left">processing</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Prolog</td>
<td align="left">prolog</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Properties</td>
<td align="left">properties</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Protocol Buffers</td>
<td align="left">proto, protobuf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Puppet</td>
<td align="left">puppet, pp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python</td>
<td align="left">python, py, gyp</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Python profiler results</td>
<td align="left">profile</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Python REPL</td>
<td align="left">python-repl, pycon</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Q</td>
<td align="left">k, kdb</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Q#</td>
<td align="left">qsharp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">QML</td>
<td align="left">qml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">R</td>
<td align="left">r</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Razor CSHTML</td>
<td align="left">cshtml, razor, razor-cshtml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ReasonML</td>
<td align="left">reasonml, re</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Rebol &#x26; Red</td>
<td align="left">redbol, rebol, red, red-system</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RenderMan RIB</td>
<td align="left">rib</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RenderMan RSL</td>
<td align="left">rsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">ReScript</td>
<td align="left">rescript, res</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RiScript</td>
<td align="left">risc, riscript</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RISC-V Assembly</td>
<td align="left">riscv, riscvasm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Roboconf</td>
<td align="left">graph, instances</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Robot Framework</td>
<td align="left">robot, rf</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">RPM spec files</td>
<td align="left">rpm-specfile, rpm, spec, rpm-spec, specfile</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Ruby</td>
<td align="left">ruby, rb, gemspec, podspec, thor, irb</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Rust</td>
<td align="left">rust, rs</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">RVT Script</td>
<td align="left">rvt, rvt-script</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SAS</td>
<td align="left">SAS, sas</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scala</td>
<td align="left">scala</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scheme</td>
<td align="left">scheme</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Scilab</td>
<td align="left">scilab, sci</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SCSS</td>
<td align="left">scss</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">SFZ</td>
<td align="left">sfz</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Shape Expressions</td>
<td align="left">shexc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Shell</td>
<td align="left">shell, console</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Smali</td>
<td align="left">smali</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Smalltalk</td>
<td align="left">smalltalk, st</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SML</td>
<td align="left">sml, ml</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Solidity</td>
<td align="left">solidity, sol</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Splunk SPL</td>
<td align="left">spl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SQL</td>
<td align="left">sql</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Stan</td>
<td align="left">stan, stanfuncs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Stata</td>
<td align="left">stata</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">STEP Part 21</td>
<td align="left">p21, step, stp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Structured Text</td>
<td align="left">iecst, scl, stl, structured-text</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Stylus</td>
<td align="left">stylus, styl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">SubUnit</td>
<td align="left">subunit</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Supercollider</td>
<td align="left">supercollider, sc</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Svelte</td>
<td align="left">svelte</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Swift</td>
<td align="left">swift</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Tcl</td>
<td align="left">tcl, tk</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Terraform (HCL)</td>
<td align="left">terraform, tf, hcl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Test Anything Protocol</td>
<td align="left">tap</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Thrift</td>
<td align="left">thrift</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Toit</td>
<td align="left">toit</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">TP</td>
<td align="left">tp</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Transact-SQL</td>
<td align="left">tsql</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Twig</td>
<td align="left">twig, craftcms</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">TypeScript</td>
<td align="left">typescript, ts, tsx, mts, cts</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">Unicorn Rails log</td>
<td align="left">unicorn-rails-log</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Unison</td>
<td align="left">unison, u</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Vala</td>
<td align="left">vala</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">VB.Net</td>
<td align="left">vbnet, vb</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">VBA</td>
<td align="left">vba</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">VBScript</td>
<td align="left">vbscript, vbs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Verilog</td>
<td align="left">verilog, v</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">VHDL</td>
<td align="left">vhdl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Vim Script</td>
<td align="left">vim</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">WGSL</td>
<td align="left">wgsl</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">X#</td>
<td align="left">xsharp, xs, prg</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">X++</td>
<td align="left">axapta, x++</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">x86 Assembly</td>
<td align="left">x86asm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">x86 Assembly (AT&#x26;T)</td>
<td align="left">x86asmatt</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">XL</td>
<td align="left">xl, tao</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">XQuery</td>
<td align="left">xquery, xpath, xq, xqm</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">YAML</td>
<td align="left">yml, yaml</td>
<td align="left">●</td>
</tr>
<tr>
<td align="left">ZenScript</td>
<td align="left">zenscript, zs</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Zephir</td>
<td align="left">zephir, zep</td>
<td align="left"></td>
</tr>
<tr>
<td align="left">Zig</td>
<td align="left">zig</td>
<td align="left"></td>
</tr>
</tbody>
</table>
<p>デフォルト以外の言語をシンタックスハイライトしたい場合は(ここではVBScriptを追加したいとします)、rehype-highlightの<code>languages</code>オプションを使います。これによりデフォルトの言語はシンタックスハイライトされなくなりますので、必要な言語はすべて指定してください。ここでは以下の言語を指定します。</p>
<ul>
<li>Bash</li>
<li>C++</li>
<li>CSS</li>
<li>HTML(XML)</li>
<li>JavaScript</li>
<li>Markdown</li>
<li>Plaintext</li>
<li>Shell</li>
<li>TypeScript</li>
<li>VBScript</li>
</ul>
<p>「src\lib\markdownToHtml.ts」を以下のように変更します。必要な言語を<code>import</code>して<code>languages</code>オプションに渡します。</p>
<pre><code class="hljs language-ts"><span class="hljs-keyword">import</span> { unified } <span class="hljs-keyword">from</span> <span class="hljs-string">'unified'</span>;
<span class="hljs-keyword">import</span> remarkParse <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-parse'</span>;
<span class="hljs-keyword">import</span> remarkGfm <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-gfm'</span>;
<span class="hljs-keyword">import</span> remarkBreaks <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-breaks'</span>;
<span class="hljs-keyword">import</span> remarkRehype <span class="hljs-keyword">from</span> <span class="hljs-string">'remark-rehype'</span>;
<span class="hljs-keyword">import</span> rehypeSlug <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-slug'</span>;
<span class="hljs-keyword">import</span> rehypeToc <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-toc'</span>;
<span class="hljs-keyword">import</span> rehypeHighlight <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-highlight'</span>;
<span class="hljs-keyword">import</span> rehypeStringify <span class="hljs-keyword">from</span> <span class="hljs-string">'rehype-stringify'</span>;

<span class="hljs-keyword">import</span> bash <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/bash'</span>;
<span class="hljs-keyword">import</span> cpp <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/cpp'</span>;
<span class="hljs-keyword">import</span> css <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/css'</span>;
<span class="hljs-keyword">import</span> html <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/xml'</span>;
<span class="hljs-keyword">import</span> js <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/javascript'</span>;
<span class="hljs-keyword">import</span> md <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/markdown'</span>;
<span class="hljs-keyword">import</span> text <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/plaintext'</span>;
<span class="hljs-keyword">import</span> shell <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/shell'</span>;
<span class="hljs-keyword">import</span> ts <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/typescript'</span>;
<span class="hljs-keyword">import</span> vbs <span class="hljs-keyword">from</span> <span class="hljs-string">'highlight.js/lib/languages/vbscript'</span>;

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> <span class="hljs-keyword">async</span> <span class="hljs-keyword">function</span> <span class="hljs-title function_">markdownToHtml</span>(<span class="hljs-params">markdown: <span class="hljs-built_in">string</span></span>) {
  <span class="hljs-keyword">const</span> result = <span class="hljs-keyword">await</span> <span class="hljs-title function_">unified</span>()
    .<span class="hljs-title function_">use</span>(remarkParse)
    .<span class="hljs-title function_">use</span>(remarkGfm)
    .<span class="hljs-title function_">use</span>(remarkBreaks)
    .<span class="hljs-title function_">use</span>(remarkRehype, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">use</span>(rehypeSlug)
    .<span class="hljs-title function_">use</span>(rehypeToc, { <span class="hljs-attr">headings</span>: [<span class="hljs-string">"h2"</span>],})
    .<span class="hljs-title function_">use</span>(rehypeHighlight, {<span class="hljs-attr">languages</span>: {bash, cpp, css, html, js, md, text, shell, ts, vbs}})
    .<span class="hljs-title function_">use</span>(rehypeStringify, { <span class="hljs-attr">allowDangerousHtml</span>: <span class="hljs-literal">true</span> })
    .<span class="hljs-title function_">process</span>(markdown);
  <span class="hljs-keyword">return</span> result.<span class="hljs-title function_">toString</span>();
}
</code></pre>
<p>もしかすると、デフォルトの言語をもっと簡単に指定する方法があるのかも知れませんが、やり方がわかりませんでした。</p>
<h3 id="参考-1">参考</h3>
<p><a href="https://github.com/rehypejs/rehype-highlight">https://github.com/rehypejs/rehype-highlight</a><br>
<a href="https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md">https://github.com/highlightjs/highlight.js/blob/main/SUPPORTED_LANGUAGES.md</a></p>2:["$","main",null,{"children":[["$","div",null,{"className":"container mx-auto py-5 px-5","children":["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":" text-slate-400 text-5xl md:text-7xl lg:text-8xl  font-bold tracking-tighter leading-tight md:leading-none mb-12 ","children":"Next.jsを使って静的なブログサイトを作成する(2)"}],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2024-06-24","children":"2024-06-24"}]}]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8","dangerouslySetInnerHTML":{"__html":"$c"}}]}]]}]}],["$","p",null,{"className":"bg-slate-300"}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Next.jsを使って静的なブログサイトを作成する(2)"}],["$","meta","3",{"name":"description","content":"コンピュータその他いろいろ"}],["$","meta","4",{"property":"og:title","content":"Next.jsを使って静的なブログサイトを作成する(2)"}],["$","meta","5",{"property":"og:description","content":"コンピュータその他いろいろ"}],["$","meta","6",{"property":"og:image","content":"https://www.sammaya.jp/assets/img/hero/hong-kong.jpg"}],["$","meta","7",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","8",{"name":"twitter:title","content":"Next.jsを使って静的なブログサイトを作成する(2)"}],["$","meta","9",{"name":"twitter:description","content":"コンピュータその他いろいろ"}],["$","meta","10",{"name":"twitter:image","content":"https://www.sammaya.jp/assets/img/hero/hong-kong.jpg"}]]
1:null
