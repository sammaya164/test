3:I[5613,[],""]
5:I[1778,[],""]
6:I[5250,["250","static/chunks/250-f635c526f5148b81.js","432","static/chunks/app/(blog)/layout-4dbe9f485cf84522.js"],""]
4:["slug","nextjs_01","d"]
7:{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"}
8:{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"}
9:{"display":"inline-block"}
a:{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0}
0:["7YetJbdZj7q2I4ySWTZ7A",[[["",{"children":["(blog)",{"children":["posts",{"children":[["slug","nextjs_01","d"],{"children":["__PAGE__?{\"slug\":\"nextjs_01\"}",{}]}]}]}]},"$undefined","$undefined",true],["",{"children":["(blog)",{"children":["posts",{"children":[["slug","nextjs_01","d"],{"children":["__PAGE__",{},["$L1","$L2",null]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children","posts","children","$4","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":[["$","link","0",{"rel":"stylesheet","href":"/test/_next/static/css/fb457670bfaeafb0.css","precedence":"next","crossOrigin":""}]]}]]},["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children","posts","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":"$undefined","notFoundStyles":"$undefined","styles":null}]]},[null,["$","div",null,{"className":"min-h-screen","children":[["$","header",null,{"className":"top-0 w-full py-6","children":["$","div",null,{"className":"items-center p-4 justify-between flex","children":[["$","div",null,{"className":"outer-title flex items-center","children":[["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"crow","className":"svg-inline--fa fa-crow px-4 h-7 text-slate-400","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 640 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M456 0c-48.6 0-88 39.4-88 88v29.2L12.5 390.6c-14 10.8-16.6 30.9-5.9 44.9s30.9 16.6 44.9 5.9L126.1 384H259.2l46.6 113.1c5 12.3 19.1 18.1 31.3 13.1s18.1-19.1 13.1-31.3L311.1 384H352c1.1 0 2.1 0 3.2 0l46.6 113.2c5 12.3 19.1 18.1 31.3 13.1s18.1-19.1 13.1-31.3l-42-102C484.9 354.1 544 280 544 192V128v-8l80.5-20.1c8.6-2.1 13.8-10.8 11.6-19.4C629 52 603.4 32 574 32H523.9C507.7 12.5 483.3 0 456 0zm0 64a24 24 0 1 1 0 48 24 24 0 1 1 0-48z","style":{}}]}],["$","$L6",null,{"href":"/","className":"hover:underline text-4xl font-bold","children":"さんまや"}]]}],["$","input",null,{"id":"nav-input","type":"checkbox","className":"peer/link hidden"}],["$","nav",null,{"className":"hidden fixed text-lg font-bold right-0 top-20 p-3 peer-checked/link:block z-20","children":["$","ul",null,{"className":"block text-slate-200 bg-[#333]","children":[["$","li",null,{"className":"p-2 hover:underline","children":["$","a",null,{"href":"/","children":"さんまや"}]}],["$","li",null,{"className":"p-2 hover:underline","children":["$","a",null,{"href":"/vbscript","children":"VBScriptさんま屋"}]}]]}]}],["$","label",null,{"htmlFor":"nav-input","className":"block peer-checked/link:hidden","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"bars","className":"svg-inline--fa fa-bars h-10 w-10","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 448 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M0 96C0 78.3 14.3 64 32 64H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32C14.3 128 0 113.7 0 96zM0 256c0-17.7 14.3-32 32-32H416c17.7 0 32 14.3 32 32s-14.3 32-32 32H32c-17.7 0-32-14.3-32-32zM448 416c0 17.7-14.3 32-32 32H32c-17.7 0-32-14.3-32-32s14.3-32 32-32H416c17.7 0 32 14.3 32 32z","style":{}}]}]}],["$","label",null,{"htmlFor":"nav-input","className":"hidden peer-checked/link:block fixed right-4 z-30","children":["$","svg",null,{"aria-hidden":"true","focusable":"false","data-prefix":"fas","data-icon":"xmark","className":"svg-inline--fa fa-xmark h-10 w-10","role":"img","xmlns":"http://www.w3.org/2000/svg","viewBox":"0 0 384 512","style":{},"children":["$","path",null,{"fill":"currentColor","d":"M342.6 150.6c12.5-12.5 12.5-32.8 0-45.3s-32.8-12.5-45.3 0L192 210.7 86.6 105.4c-12.5-12.5-32.8-12.5-45.3 0s-12.5 32.8 0 45.3L146.7 256 41.4 361.4c-12.5 12.5-12.5 32.8 0 45.3s32.8 12.5 45.3 0L192 301.3 297.4 406.6c12.5 12.5 32.8 12.5 45.3 0s12.5-32.8 0-45.3L237.3 256 342.6 150.6z","style":{}}]}]}]]}]}],["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children","(blog)","children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":{"fontFamily":"system-ui,\"Segoe UI\",Roboto,Helvetica,Arial,sans-serif,\"Apple Color Emoji\",\"Segoe UI Emoji\"","height":"100vh","textAlign":"center","display":"flex","flexDirection":"column","alignItems":"center","justifyContent":"center"},"children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":{"display":"inline-block","margin":"0 20px 0 0","padding":"0 23px 0 0","fontSize":24,"fontWeight":500,"verticalAlign":"top","lineHeight":"49px"},"children":"404"}],["$","div",null,{"style":{"display":"inline-block"},"children":["$","h2",null,{"style":{"fontSize":14,"fontWeight":400,"lineHeight":"49px","margin":0},"children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}],["$","footer",null,{"className":"bg-bluelo text-white border-t border-neutral-200","children":["$","div",null,{"className":"container mx-auto py-5 px-5","children":["$","div",null,{"className":"py-28 flex flex-col lg:flex-row items-center","children":[["$","h3",null,{"className":"text-4xl lg:text-[2.5rem] font-bold tracking-tighter leading-tight text-center lg:text-left mb-10 lg:mb-0 lg:pr-4 lg:w-1/2","children":"Statically Generated with Next.js."}],["$","div",null,{"className":"flex flex-col lg:flex-row justify-center items-center lg:pl-4 lg:w-1/2","children":[["$","a",null,{"href":"https://nextjs.org/docs/app/building-your-application/routing/pages-and-layouts","className":"mx-3 bg-black hover:bg-white hover:text-black border border-black text-white font-bold py-3 px-12 lg:px-8 duration-200 transition-colors mb-6 lg:mb-0","children":"Read Documentation"}],["$","a",null,{"href":"https://github.com/vercel/next.js/tree/canary/examples/blog-starter","className":"mx-3 font-bold hover:underline","children":"View on GitHub"}]]}]]}]}]}]]}],null]]},[null,["$","html",null,{"lang":"ja","children":[["$","head",null,{"children":[["$","link",null,{"rel":"apple-touch-icon","sizes":"180x180","href":"/favicon/apple-touch-icon.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"32x32","href":"/favicon/favicon-32x32.png"}],["$","link",null,{"rel":"icon","type":"image/png","sizes":"16x16","href":"/favicon/favicon-16x16.png"}],["$","link",null,{"rel":"manifest","href":"/favicon/site.webmanifest"}],["$","link",null,{"rel":"mask-icon","href":"/favicon/safari-pinned-tab.svg","color":"#000000"}],["$","link",null,{"rel":"shortcut icon","href":"/favicon/favicon.ico"}],["$","meta",null,{"name":"msapplication-TileColor","content":"#000000"}],["$","meta",null,{"name":"msapplication-config","content":"/favicon/browserconfig.xml"}],["$","meta",null,{"name":"theme-color","content":"#000"}],["$","link",null,{"rel":"alternate","type":"application/rss+xml","href":"/feed.xml"}]]}],["$","body",null,{"className":"__className_4b2d43","children":["$","$L3",null,{"parallelRouterKey":"children","segmentPath":["children"],"loading":"$undefined","loadingStyles":"$undefined","loadingScripts":"$undefined","hasLoading":false,"error":"$undefined","errorStyles":"$undefined","errorScripts":"$undefined","template":["$","$L5",null,{}],"templateStyles":"$undefined","templateScripts":"$undefined","notFound":[["$","title",null,{"children":"404: This page could not be found."}],["$","div",null,{"style":"$7","children":["$","div",null,{"children":[["$","style",null,{"dangerouslySetInnerHTML":{"__html":"body{color:#000;background:#fff;margin:0}.next-error-h1{border-right:1px solid rgba(0,0,0,.3)}@media (prefers-color-scheme:dark){body{color:#fff;background:#000}.next-error-h1{border-right:1px solid rgba(255,255,255,.3)}}"}}],["$","h1",null,{"className":"next-error-h1","style":"$8","children":"404"}],["$","div",null,{"style":"$9","children":["$","h2",null,{"style":"$a","children":"This page could not be found."}]}]]}]}]],"notFoundStyles":[],"styles":null}]}]]}],null]],[[["$","link","0",{"rel":"stylesheet","href":"/test/_next/static/css/1e48c8eb9467e29d.css","precedence":"next","crossOrigin":""}]],"$Lb"]]]]
c:T3814,<nav class="toc"><ol class="toc-level toc-level-1"><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#はじめに">はじめに</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#nodejsをインストールする">Node.jsをインストールする</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#nextプロジェクトを作成して表示する">Nextプロジェクトを作成して表示する</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#記事を追加してみる">記事を追加してみる</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#metadata">Metadata</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#ビルド">ビルド</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#静的エクスポート">静的エクスポート</a></li><li class="toc-item toc-item-h2"><a class="toc-link toc-link-h2" href="#デプロイ">デプロイ</a></li></ol></nav><h2 id="はじめに">はじめに</h2>
<p><a href="https://nextjs.org/">Next.js</a> の <a href="https://vercel.com/templates/next.js/blog-starter-kit">Blog Starter Kit</a> を使ったブログサイト作成手順のメモです。<br>
一般のレンタルサーバにアップロード可能な静的コンテンツを作成します。</p>
<h3 id="私の環境">私の環境</h3>
<ul>
<li>OS: Windows 11 Home</li>
<li>ターミナル: PowerShell(v7.4.2)</li>
<li>エディタ: Visual Studio Code</li>
<li>Node.js: v20.12.2</li>
</ul>
<h3 id="blog-starter-kit-とは">Blog Starter Kit とは</h3>
<p>Next.jsには様々な<a href="https://vercel.com/templates/next.js">テンプレート</a>が用意されており、<code>Blog Starter Kit</code> はブログ作成用テンプレートの一つです。簡易なマークダウンと<code>Tailwind CSS</code>が使えます。</p>
<h2 id="nodejsをインストールする">Node.jsをインストールする</h2>
<p>以下の手順で、Node.jsをインストールします。</p>
<ol>
<li><a href="https://nodejs.org">https://nodejs.org</a> を表示します。</li>
<li>メニューの <code>download</code> をクリックします。</li>
<li><code>Prebuilt Binaries</code> をクリックします。</li>
<li>最新のLTSバージョン(今回はv20.12.2)、Windows、x64を選択します。</li>
<li><code>Download Node.js</code> をクリックします。</li>
<li>ダウンロードしたZIPファイルを展開します。</li>
<li>展開したフォルダを適当な場所へ配置します。ここではCドライブ直下に配置します。「C:\node-v20.12.2-win-x64」直下にnode.exeが存在する状態です。</li>
<li>Windowsの検索ボックスに <code>システムの</code> と入力します。</li>
<li>表示された <code>システムの詳細設定の表示</code> をクリックします。</li>
<li><code>環境変数</code> をクリックします。</li>
<li>下側にあるシステム環境変数の <code>Path</code> を選択して <code>編集</code> をクリックします。</li>
<li><code>新規</code> をクリックして先ほどのフォルダのパスを入力します。ここでは「C:\node-v20.12.2-win-x64」を入力します。</li>
<li>OKをクリックします。</li>
<li>ターミナルを起動します。</li>
<li>下記コマンドによりバージョンが表示されれば成功です。</li>
</ol>
<pre><code class="hljs language-shell"><span class="hljs-meta prompt_">> </span><span class="bash">node -v</span>
v20.12.2
<span class="hljs-meta prompt_">> </span><span class="bash">npm -v</span>
10.5.0
</code></pre>
<h2 id="nextプロジェクトを作成して表示する">Nextプロジェクトを作成して表示する</h2>
<p>適当なフォルダへ移動します。</p>
<pre><code class="hljs language-bash">> <span class="hljs-built_in">cd</span> c:\website
</code></pre>
<p>プロジェクトを作成します。</p>
<pre><code class="hljs language-shell"><span class="hljs-meta prompt_">> </span><span class="bash">npx create-next-app --example blog-starter blog_starter_app</span>
</code></pre>
<p>パッケージのインストールが必要と言われたら yes を回答します。</p>
<p>作成されたフォルダへ移動します。</p>
<pre><code class="hljs language-js">> cd blog_starter_app
</code></pre>
<p>開発モードで実行します。</p>
<pre><code class="hljs language-js">> npx next dev
</code></pre>
<p>ブラウザで<code>http://localhost:3000</code>を表示して画面を確認してください。</p>
<h2 id="記事を追加してみる">記事を追加してみる</h2>
<p>プロジェクトのフォルダ内はこのようになってます。</p>
<pre><code class="hljs language-bash">BLOG_STARTER_APP
│  .gitignore
│  next-env.d.ts
│  package-lock.json
│  package.json
│  postcss.config.js
│  README.md
│  tailwind.config.ts
│  tsconfig.json
│
├─node_modules
│  └─(省略)
│
├─public
│  └─(省略)
│
├─src
│  └─(省略)
│
└─_posts
        dynamic-routing.md
        hello-world.md
        preview.md
</code></pre>
<p>「_posts」フォルダ内に拡張子.mdのファイルを作成すると記事が追加されます。<br>
サンプル記事が入ってますのでこれらを参考に記事を追加します。</p>
<pre><code class="hljs language-js">---
<span class="hljs-attr">title</span>: <span class="hljs-string">"九龍風水傳"</span>
<span class="hljs-attr">coverImage</span>: <span class="hljs-string">"/assets/blog/preview/cover.jpg"</span>
<span class="hljs-attr">date</span>: <span class="hljs-string">"1997-05-22T"</span>
<span class="hljs-attr">author</span>:
  <span class="hljs-attr">name</span>: <span class="hljs-string">"阿J"</span>
  <span class="hljs-attr">picture</span>: <span class="hljs-string">"/assets/blog/authors/jj.jpeg"</span>
<span class="hljs-attr">ogImage</span>:
  <span class="hljs-attr">url</span>: <span class="hljs-string">"/img/gate.jpeg"</span>
---

## ファイアの日

</code></pre>
<p>ブラウザをリロードして記事が追加されたことを確認してください。</p>
<h2 id="metadata">Metadata</h2>
<p>ところで、ターミナルを確認すると下記のようなエラーが表示されていると思います。</p>
<p>metadata.metadataBase is not set for resolving social open graph or twitter images, using "<a href="http://localhost:3000">http://localhost:3000</a>". See <a href="https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase">https://nextjs.org/docs/app/api-reference/functions/generate-metadata#metadatabase</a></p>
<p>リンク先をヒントに「src/app/layout.tsx」を編集します。<br>
編集前はこうなってます。</p>
<pre><code class="hljs language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">metadata</span>: <span class="hljs-title class_">Metadata</span> = {
  <span class="hljs-attr">title</span>: <span class="hljs-string">`Next.js Blog Example with <span class="hljs-subst">${CMS_NAME}</span>`</span>,
  <span class="hljs-attr">description</span>: <span class="hljs-string">`A statically generated blog example using Next.js and <span class="hljs-subst">${CMS_NAME}</span>.`</span>,
  <span class="hljs-attr">openGraph</span>: {
    <span class="hljs-attr">images</span>: [<span class="hljs-variable constant_">HOME_OG_IMAGE_URL</span>],
  },
};
</code></pre>
<p>metadataBaseの行を追加し、title、description、imagesも編集します。<br>
以下は例です。値は各自のサイトに合わせて編集してください。</p>
<pre><code class="hljs language-js"><span class="hljs-keyword">export</span> <span class="hljs-keyword">const</span> <span class="hljs-attr">metadata</span>: <span class="hljs-title class_">Metadata</span> = {
  <span class="hljs-attr">title</span>: <span class="hljs-string">`MY AWESOME SITE`</span>,
  <span class="hljs-attr">description</span>: <span class="hljs-string">``</span>,
  <span class="hljs-attr">metadataBase</span>: <span class="hljs-keyword">new</span> <span class="hljs-title function_">URL</span>(<span class="hljs-string">'https://hogehoge.net/'</span>),
  <span class="hljs-attr">openGraph</span>: {
    <span class="hljs-attr">images</span>: <span class="hljs-string">'/assets/og.png'</span>,
  },
};
</code></pre>
<p>imagesの画像は実在してなくてもエラーにはなりません。<br>
以上によりさきほどのエラーは出なくなったはずです。</p>
<h2 id="ビルド">ビルド</h2>
<p>ターミナルでの実行は一旦終了します。キーボードのCtrl+Cを押してください。<br>
次にビルドを実行します。</p>
<pre><code class="hljs language-js">> npx next build
</code></pre>
<p>ビルドが完了するのを待ちます。Failed とか error という単語が表示されてなければ成功です。<br>
下記コマンドを実行し、ブラウザで<code>http://localhost:3000</code>を表示します。</p>
<pre><code class="hljs language-js">> npx next start
</code></pre>
<p>ブラウザでは正常に表示されますが、ターミナルには次のようなエラーが表示されていました。</p>
<p>For production Image Optimization with Next.js, the optional 'sharp' package is strongly recommended. Run 'npm i sharp', and Next.js will use it automatically for Image Optimization.</p>
<p>警告に従い、画像最適化のためのsharpパッケージをインストールします。<br>
Ctrl+Cで<code>npx next startを</code>一旦終了してから</p>
<pre><code class="hljs language-js">> npm i sharp
</code></pre>
<p>sharpをインストールできたら、再度ビルドからやり直します。</p>
<pre><code class="hljs language-js">> npx next build
> npx next start
</code></pre>
<p>ターミナルにエラーが表示されなくなったことを確認します。</p>
<p>参考: <a href="https://nextjs.org/docs/messages/sharp-missing-in-production">https://nextjs.org/docs/messages/sharp-missing-in-production</a></p>
<h2 id="静的エクスポート">静的エクスポート</h2>
<p>エクスポートするために下記コマンドを実行したところエラーが発生しました。</p>
<pre><code class="hljs language-js">> npx next <span class="hljs-keyword">export</span>
</code></pre>
<p>The "next export" command has been removed in favor of "output: export" in next.config.js. Learn more: <a href="https://nextjs.org/docs/advanced-features/static-html-export">https://nextjs.org/docs/advanced-features/static-html-export</a></p>
<p>このコマンドはNext.jsのv14.0から使用できなくなったようです。エクスポートするには設定ファイルを編集する必要があります。<br>
プロジェクトフォルダ直下(package.jsonと同じ場所)に「next.config.mjs」ファイルを作成します。</p>
<pre><code class="hljs language-js"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> {<span class="hljs-type">import('next').NextConfig</span>} */</span>

<span class="hljs-keyword">const</span> nextConfig = {
    <span class="hljs-attr">output</span>: <span class="hljs-string">"export"</span>,
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> nextConfig;
</code></pre>
<p>ドメイン下にサブパスが存在する場合、つまり<code>https://hogehoge.net</code>でなく<code>https://hogehoge.net/fuga</code>をサイトのルートにしたい場合は<code>basePath</code>を設定します。</p>
<pre><code class="hljs language-js"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> {<span class="hljs-type">import('next').NextConfig</span>} */</span>

<span class="hljs-keyword">const</span> nextConfig = {
    <span class="hljs-attr">output</span>: <span class="hljs-string">"export"</span>,
    <span class="hljs-attr">basePath</span>: <span class="hljs-string">"/fuga"</span>,
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> nextConfig;
</code></pre>
<p>これでビルドしたときにoutフォルダ内に静的コンテンツがエクスポートされるようになりました。</p>
<pre><code class="hljs language-js">> npx next build
</code></pre>
<p>静的エクスポートでは <code>npx next start</code> は使用できなくなります。<br>
代わりに以下のコマンドを実行すると、エクスポート結果が表示されます。</p>
<pre><code class="hljs language-js">> npx serve out
</code></pre>
<p>「OK to proceed?」には y を回答します。</p>
<p>ブラウザで確認するとカバーイメージが表示されていません。<br>
静的エクスポートではImage Optimizationを無効にする必要があるようです。<br>
先ほどの「next.config.mjs」を編集します。</p>
<pre><code class="hljs language-js"><span class="hljs-comment">/** <span class="hljs-doctag">@type</span> {<span class="hljs-type">import('next').NextConfig</span>} */</span>

<span class="hljs-keyword">const</span> nextConfig = {
    <span class="hljs-attr">output</span>: <span class="hljs-string">"export"</span>,
    <span class="hljs-attr">images</span>: {
        <span class="hljs-attr">unoptimized</span>: <span class="hljs-literal">true</span>
    },
};

<span class="hljs-keyword">export</span> <span class="hljs-keyword">default</span> nextConfig;
</code></pre>
<p>ビルドからやり直します。</p>
<pre><code class="hljs language-js">> npx next build
> npx serve out
</code></pre>
<p>表示結果が問題ないことを確認します。</p>
<h2 id="デプロイ">デプロイ</h2>
<p>outフォルダの中身を本番環境へアップロードします。</p>
<p>なお<code>Github Pages</code>にアップロードした場合は、Jekyllの働きにより<code>_next</code>フォルダが見えなくなって、CSSのスタイルが反映されないという問題が発生します。<br>
リポジトリのトップに<code>.nojekyll</code>という名前の空ファイルを作成することで解決します。Jekyllが働かなくなりスタイルが反映されます。</p>2:["$","main",null,{"children":[["$","div",null,{"className":"container mx-auto py-5 px-5","children":["$","article",null,{"className":"mb-32","children":[[["$","h1",null,{"className":" text-slate-400 text-5xl md:text-7xl lg:text-8xl  font-bold tracking-tighter leading-tight md:leading-none mb-12 ","children":"Next.jsを使って静的なブログサイトを作成する(1)"}],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"mb-6 text-lg","children":["$","time",null,{"dateTime":"2024-06-10T23:00:00.000Z","children":"2024-06-11"}]}]}]],["$","div",null,{"className":"max-w-2xl mx-auto","children":["$","div",null,{"className":"markdown-styles_markdown__ORfR8","dangerouslySetInnerHTML":{"__html":"$c"}}]}]]}]}],["$","p",null,{"className":"bg-slate-300"}]]}]
b:[["$","meta","0",{"name":"viewport","content":"width=device-width, initial-scale=1"}],["$","meta","1",{"charSet":"utf-8"}],["$","title","2",{"children":"Next.jsを使って静的なブログサイトを作成する(1)"}],["$","meta","3",{"name":"description","content":"コンピュータその他いろいろ"}],["$","meta","4",{"property":"og:title","content":"Next.jsを使って静的なブログサイトを作成する(1)"}],["$","meta","5",{"property":"og:description","content":"コンピュータその他いろいろ"}],["$","meta","6",{"property":"og:image","content":"https://www.sammaya.jp/assets/img/hero/hong-kong.jpg"}],["$","meta","7",{"name":"twitter:card","content":"summary_large_image"}],["$","meta","8",{"name":"twitter:title","content":"Next.jsを使って静的なブログサイトを作成する(1)"}],["$","meta","9",{"name":"twitter:description","content":"コンピュータその他いろいろ"}],["$","meta","10",{"name":"twitter:image","content":"https://www.sammaya.jp/assets/img/hero/hong-kong.jpg"}]]
1:null
